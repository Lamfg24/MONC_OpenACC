name = 
steps = extract preprocess build
dest = /home/delbeke/Documents/vn1.0.3_monc_bellouin_delbeke_test
build.prop{ar, class} = ar
build.prop{ar.flags, class} = rs
build.prop{archive-ok-target-category, class} = include o
build.prop{cc, class} = gcc
build.prop{cc.defs, class} = 
build.prop{cc.flag-compile, class} = -c
build.prop{cc.flag-define, class} = -D%s
build.prop{cc.flag-include, class} = -I%s
build.prop{cc.flag-lib, class} = -l%s
build.prop{cc.flag-lib-path, class} = -L%s
build.prop{cc.flag-omp, class} = 
build.prop{cc.flag-output, class} = -o%s
build.prop{cc.flags, class} = 
build.prop{cc.flags-ld, class} = 
build.prop{cc.include-paths, class} = 
build.prop{cc.lib-paths, class} = 
build.prop{cc.libs, class} = 
build.prop{checksum-method, class} = 
build.prop{class, cxx} = g++
build.prop{class, cxx.defs} = 
build.prop{class, cxx.flag-compile} = -c
build.prop{class, cxx.flag-define} = -D%s
build.prop{class, cxx.flag-include} = -I%s
build.prop{class, cxx.flag-lib} = -l%s
build.prop{class, cxx.flag-lib-path} = -L%s
build.prop{class, cxx.flag-omp} = 
build.prop{class, cxx.flag-output} = -o%s
build.prop{class, cxx.flags} = 
build.prop{class, cxx.flags-ld} = 
build.prop{class, cxx.include-paths} = 
build.prop{class, cxx.lib-paths} = 
build.prop{class, cxx.libs} = 
build.prop{class, dep.bin} = 
build.prop{class, dep.f.module} = 
build.prop{class, dep.include} = 
build.prop{class, dep.o} = 
build.prop{class, dep.o.special} = 
build.prop{class, fc} = mpif90
build.prop{class, fc.defs} = 
build.prop{class, fc.flag-compile} = -c
build.prop{class, fc.flag-define} = -D%s
build.prop{class, fc.flag-include} = -I%s
build.prop{class, fc.flag-lib} = -l%s
build.prop{class, fc.flag-lib-path} = -L%s
build.prop{class, fc.flag-module} = 
build.prop{class, fc.flag-omp} = 
build.prop{class, fc.flag-output} = -o%s
build.prop{class, fc.flags} = -O3 -g -Wall -fpic -fmath-errno -fcheck=pointer -fcheck=all -ffpe-trap=zero,invalid,overflow -fallow-argument-mismatch -fallow-invalid-boz -DDEBUG_MODE -J .
build.prop{class, fc.flags-ld} = -Wl,-Bsymbolic-functions -fcheck=all -ffpe-trap=zero,invalid,overflow -flto=auto -ffat-lto-objects -flto=auto -Wl,-z,relro
build.prop{class, fc.include-paths} = /usr/local/Modules/modulefiles/netcdf-fortran/4.6.1_parallel/include
build.prop{class, fc.lib-paths} = /usr/local/Modules/modulefiles/netcdf-c/4.9.2_parallel/lib /usr/local/Modules/modulefiles/netcdf-fortran/4.6.1_parallel/lib /usr/local/Modules/modulefiles/hdf5/1.10.3_parallel/lib /usr/lib/x86_64-linux-gnu
build.prop{class, fc.libs} = netcdff netcdf hdf5 mpich hdf5_hl z pthread
build.prop{class, file-ext.a} = .a
build.prop{class, file-ext.bin} = .exe
build.prop{class, file-ext.c} = .c .i .m .mi
build.prop{class, file-ext.cxx} = .cc .cp .cxx .cpp .CPP .c++ .C .mm .M .mii
build.prop{class, file-ext.etc} = .etc
build.prop{class, file-ext.f90-interface} = .interface
build.prop{class, file-ext.f90-mod} = .mod
build.prop{class, file-ext.fortran} = .F .F90 .F95 .FOR .FTN .f .f90 .f95 .for .ftn .inc
build.prop{class, file-ext.h} = .h
build.prop{class, file-ext.o} = .o
build.prop{class, file-ext.script} = 
build.prop{class, file-name-option.f90-mod} = 
build.prop{class, file-she.script} = 
build.prop{class, ignore-missing-dep-ns} = 
build.prop{class, keep-lib-o} = 
build.prop{class, ld} = 
build.prop{class, link-without-ar} = 
build.prop{class, no-dep.bin} = 
build.prop{class, no-dep.f.module} = mpi netcdf netcdff
build.prop{class, no-dep.include} = 
build.prop{class, no-dep.o} = 
build.prop{class, no-dep.o.special} = 
build.prop{class, no-inherit-source} = 
build.prop{class, no-inherit-target-category} = bin etc lib
build.prop{class, no-step-source} = 
build.prop{class, ns-dep.o} = 
extract.prop{class, diff3} = diff3
extract.prop{class, diff3.flags} = -E -m
preprocess.prop{class, cpp} = cpp
preprocess.prop{class, cpp.defs} = 
preprocess.prop{class, cpp.flag-define} = -D%s
preprocess.prop{class, cpp.flag-include} = -I%s
preprocess.prop{class, cpp.flags} = 
preprocess.prop{class, cpp.include-paths} = 
preprocess.prop{class, dep.include} = 
preprocess.prop{class, file-ext.cpp} = .c .m .cc .cp .cxx .cpp .CPP .c++ .C .mm .M
preprocess.prop{class, file-ext.fpp} = .F90 .F95 .F .FTN .FOR
preprocess.prop{class, file-ext.h} = .h
preprocess.prop{class, fpp} = cpp
preprocess.prop{class, fpp.defs} = 
preprocess.prop{class, fpp.flag-define} = -D%s
preprocess.prop{class, fpp.flag-include} = -I%s
preprocess.prop{class, fpp.flags} = -P -traditional
preprocess.prop{class, fpp.include-paths} = 
preprocess.prop{class, ignore-missing-dep-ns} = 
preprocess.prop{class, no-dep.include} = argsts.h typsts.h s_scmop.h
preprocess.prop{class, no-inherit-source} = 
preprocess.prop{class, no-inherit-target-category} = 
preprocess.prop{class, no-step-source} = 
extract.ns = monc casim socrates
extract.location{primary, type:fs}[casim] = /home/delbeke/Documents/vn1.0.3_monc_bellouin_delbeke_test/extract/casim
extract.path-excl[casim] = /
extract.path-incl[casim] = src
extract.location{type:fs}[casim] = /home/delbeke/Documents/vn1.0.3_monc_bellouin_delbeke_test/extract/casim
extract.location{primary, type:fs}[monc] = /home/delbeke/Documents
extract.path-excl[monc] = / components/casim/src/casim_stub.F90 components/socrates_couple/src/socrates_couple_stub.F90 components/petsc_solver/src/petsc_solver.F90 components/casim_profile_dgs/src/casim_profile_dgs_stub.F90
extract.path-incl[monc] = components model_core io misc tests/test_cases monc_driver.F90 components/casim/src/casim_monc_diagnostics/casim_monc_dgs_space.F90
extract.location{type:svn}[monc] = /home/delbeke/Documents/vn1.0.3_monc_bellouin_delbeke_test
extract.location{primary, type:fs}[socrates] = /home/delbeke/Documents/vn1.0.3_monc_bellouin_delbeke_test/extract/socrates
extract.path-excl[socrates] = / src/modules_core/missing_data_mod.F90 src/modules_core/parkind1.F90 src/modules_core/yomhook.F90
extract.path-incl[socrates] = src/modules_core src/radiance_core
extract.location{type:fs}[socrates] = /home/delbeke/Documents/vn1.0.3_monc_bellouin_delbeke_test/extract/socrates
preprocess.target{task} = process
preprocess.prop{cpp.defs} = __DARWIN _XOPEN_SOURCE=700 ENFORCE_THREAD_SAFETY
preprocess.prop{file-ext.h} = .static .h
preprocess.prop{fpp.defs} = U_ACTIVE V_ACTIVE W_ACTIVE ENFORCE_THREAD_SAFETY __DARWIN
preprocess.prop{fpp.defs}[casim] = DEF_MODEL=MODEL_MONC MODEL_MONC=4 U_ACTIVE V_ACTIVE W_ACTIVE ENFORCE_THREAD_SAFETY __DARWIN
preprocess.prop{fpp.flags} = -E -P -traditional -fpic -fmath-errno -fcheck-pointer-bounds -fcheck=all -ffpe-trap=zero,invalid,overflow -fallow-invalid-boz
build.target{key} = monc_driver.exe
build.prop{cc.flags}[monc/io] = -fcommon -fpic -fcheck-pointer-bounds
build.prop{dep.o}[monc/components/fftsolver/src/fftnorth.F90] = fftpack.o fftpack_kind.o zffti.o zfftf.o zfftb.o cffti1.o cfftf1.o cfftb1.o passb2.o passb3.o passb4.o passb5.o passb.o passf2.o passf3.o passf4.o passf5.o passf.o
build.prop{dep.o}[monc/io/src/forthread] = ft_attr.o  ft_data.o  ft_wrapper.o
build.prop{fc.flags}[casim/src] = -O1 -g -Wall -fpic -fmath-errno -fcheck=pointer -fcheck=all -ffpe-trap=zero,invalid,overflow -fallow-argument-mismatch -fallow-invalid-boz -J .
build.prop{fc.flags}[monc/components/fftsolver/src/fftnorth.F90] = -O1 -g -Wall -fpic -fmath-errno -fcheck=pointer -fcheck=all -ffpe-trap=zero,invalid,overflow -fallow-argument-mismatch -fallow-invalid-boz -J .
build.prop{fc.flags}[monc/components/fftsolver/src/fftpack] = -O1 -g -Wall -fpic -fmath-errno -fcheck=pointer -fcheck=all -ffpe-trap=zero,invalid,overflow -fallow-argument-mismatch -fallow-invalid-boz -J .
build.prop{fc.flags}[monc/components/fftsolver/src/fftsolver.F90] = -O1 -g -Wall -fpic -fmath-errno -fcheck=pointer -fcheck=all -ffpe-trap=zero,invalid,overflow -fallow-argument-mismatch -fallow-invalid-boz -J .
build.prop{fc.flags}[monc/components/iterativesolver/src/iterativesolver.F90] = -O1 -g -Wall -fpic -fmath-errno -fcheck=pointer -fcheck=all -ffpe-trap=zero,invalid,overflow -fallow-argument-mismatch -fallow-invalid-boz -J .
build.prop{fc.flags}[monc/components/iterativesolver_single_prec/src/iterativesolver_single_prec.F90] = -O1 -g -Wall -fpic -fmath-errno -fcheck=pointer -fcheck=all -ffpe-trap=zero,invalid,overflow -fallow-argument-mismatch -fallow-invalid-boz -J .
build.prop{fc.flags}[monc/components/pressuresource/src/pressuresource.F90] = -O1 -g -Wall -fpic -fmath-errno -fcheck=pointer -fcheck=all -ffpe-trap=zero,invalid,overflow -fallow-argument-mismatch -fallow-invalid-boz -J .
build.prop{fc.flags}[monc/io] = -O3 -g -Wall -fpic -fmath-errno -fcheck=pointer -fcheck=all -ffpe-trap=zero,invalid,overflow -fallow-argument-mismatch -fallow-invalid-boz -DDEBUG_MODE -J . -frecursive
build.prop{fc.flags}[monc/model_core] = -O3 -g -Wall -fpic -fmath-errno -fcheck=pointer -fcheck=all -ffpe-trap=zero,invalid,overflow -fallow-argument-mismatch -fallow-invalid-boz -DDEBUG_MODE -J . -frecursive
build.prop{fc.flags}[monc/model_core/src/utils/conversions.F90] = -O1 -g -Wall -fpic -fmath-errno -fcheck=pointer -fcheck=all -ffpe-trap=zero,invalid,overflow -fallow-argument-mismatch -fallow-invalid-boz -J .
build.prop{fc.flags}[socrates/src] = -O1 -g -Wall -fpic -fmath-errno -fcheck=pointer -fcheck=all -ffpe-trap=zero,invalid,overflow -fallow-argument-mismatch -fallow-invalid-boz -J .

# steps indique les étapes à réaliser ici extract puis preprocess puis build
steps = extract preprocess build



#spécifie la localisation du projet pour une extraction
#../ signifie ici que la cible est /home/delbeke/Documents/vn1.0.0_monc_bellouin
extract.location{primary}[monc] = ../
#Specifies a list of names of the projects to extract.
extract.ns = monc
#$HERE is a reserved variable to indicate the parent directory of the current configuration file ici /home/delbeke/Documents/vn1.0.0_monc_bellouin
#Specifies the location of the base source tree of a project
extract.location[monc]  = $HERE/..
#Specifies the paths in a project tree to exclude/include ici les fichiers associés à casim et socrates 
extract.path-excl[monc] = / components/casim/src/casim.F90 components/petsc_solver/src/petsc_solver.F90 components/socrates_couple/src/socrates_couple.F90 components/casim/src/casim_monc_diagnostics/casim_monc_dgs_space.F90 components/casim_profile_dgs/src/casim_profile_dgs.F90
#inclue les dossiers components model_core io misc testcases et le fichier monc_driver dans /home/delbeke/Documents/vn1.0.0_monc_bellouin
extract.path-incl[monc] = components model_core io misc tests/test_cases monc_driver.F90



#file-ext.h Specifies the extensions of a C/C++ header file
preprocess.prop{file-ext.h} = .static .h
#fpp.flags The options used by the Fortran pre-processor
preprocess.prop{fpp.flags}  = $fpp_flags
#fpp.defs The Fortran pre-processor will pre-define each word in this setting as a macro.
preprocess.prop{fpp.defs}   = $fppdefs
#cpp.defs The C/C++ pre-processor will pre-define each word in this setting as a macro.
preprocess.prop{cpp.defs} =  $cppdefs
#*.prop{class,*} declarations in the FCM make configuration file of the current session
#Switches off a list of automatic include dependencies. If the value is a *, switches off all automatic include dependencies.
preprocess.prop{class, no-dep.include} = argsts.h typsts.h s_scmop.h


#Selects targets to build according to their keys, categories and tasks.
build.target                       = monc_driver.exe
#no-dep.f.module = Switches off a list of automatic Fortran module dependencies.
build.prop{class,no-dep.f.module}  = mpi netcdf netcdff
#fc.include-paths The Fortran compiler will add each directory in this setting as an include search path
build.prop{class,fc.include-paths} = $netcdf_inc_path
build.prop{class,fc.include-paths} = $netcdff_inc_path
#fc.libs The Fortran linker will add each item in this setting as a link library
build.prop{class,fc.libs}          = netcdff netcdf hdf5 mpich hdf5_hl z pthread 
build.prop{class,fc.lib-paths}     = $netcdf_lib_path $netcdff_lib_path $hdf5_lib_path /usr/lib/x86_64-linux-gnu
#fc = The Fortran compiler and linker
build.prop{class,fc}          = $f90
#cc = The C compiler and linker.
build.prop{class,cc}          = $cc
#fc.flags = The options used by the Fortran compiler at compile time
build.prop{class,fc.flags}         = $fflags
#fc.flags-ld = The options used by the Fortran compiler at link time.
build.prop{class,fc.flags-ld}      = -Wl,-Bsymbolic-functions -fcheck=all -ffpe-trap=zero,invalid,overflow -flto=auto -ffat-lto-objects -flto=auto -Wl,-z,relro

#dep.o Specifies a list of manual object dependencies.
build.prop{dep.o}[monc/io/src/forthread] = ft_attr.o  ft_data.o  ft_wrapper.o
build.prop{dep.o}[monc/components/fftsolver/src/fftnorth.F90] = fftpack.o fftpack_kind.o zffti.o zfftf.o zfftb.o cffti1.o cfftf1.o cfftb1.o passb2.o passb3.o passb4.o passb5.o passb.o passf2.o passf3.o passf4.o passf5.o passf.o


build.prop{fc.flags}[monc/model_core] = $fflags_core
build.prop{fc.flags}[monc/io]   = $fflags_io
build.prop{cc.flags}[monc/io]   = $cflags
build.prop{fc.flags}[monc/model_core/src/utils/conversions.F90]= $fflags_psrc
build.prop{fc.flags}[monc/components/pressuresource/src/pressuresource.F90]= $fflags_psrc
build.prop{fc.flags}[monc/components/fftsolver/src/fftsolver.F90]= $fflags_psrc
build.prop{fc.flags}[monc/components/fftsolver/src/fftnorth.F90]= $fflags_psrc
build.prop{fc.flags}[monc/components/fftsolver/src/fftpack]= $fflags_psrc
build.prop{fc.flags}[monc/components/iterativesolver/src/iterativesolver.F90]= $fflags_psrc
build.prop{fc.flags}[monc/components/iterativesolver_single_prec/src/iterativesolver_single_prec.F90]= $fflags_psrc


######### A ce stade la le fichier monc_driver.exe est créé





